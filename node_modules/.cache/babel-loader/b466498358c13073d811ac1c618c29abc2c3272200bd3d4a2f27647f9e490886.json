{"ast":null,"code":"import React,{useState}from'react';import MealPlannerDay from'../components/MealPlannerDay';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MealPlanner=()=>{const[currentPhase,setCurrentPhase]=useState(1);const[currentWeek,setCurrentWeek]=useState(new Date());// Generate week dates based on currentWeek\nconst getWeekDates=()=>{const dates=[];const firstDay=new Date(currentWeek);firstDay.setDate(firstDay.getDate()-firstDay.getDay());// Start with Sunday\nfor(let i=0;i<7;i++){const date=new Date(firstDay);date.setDate(date.getDate()+i);dates.push(date);}return dates;};const weekDates=getWeekDates();const daysOfWeek=['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];// Initial meal plan data\nconst[mealPlan,setMealPlan]=useState(daysOfWeek.reduce((acc,day)=>{acc[day]={breakfast:null,lunch:null,dinner:null,snacks:null};return acc;},{}));// Sample meal options by phase\nconst mealOptionsByPhase={0:{// Phase 0 - Big Cleanup\nbreakfast:[{id:'p0b1',name:'Vegetable Omelette',description:'3 eggs with spinach, onions and peppers'},{id:'p0b2',name:'Green Smoothie',description:'Spinach, cucumber, celery, avocado and lemon juice'}],lunch:[{id:'p0l1',name:'Grilled Chicken Salad',description:'With mixed greens, cucumber and olive oil dressing'},{id:'p0l2',name:'Vegetable Soup',description:'Homemade with leafy greens, celery, onions and garlic'}],dinner:[{id:'p0d1',name:'Baked Salmon',description:'With asparagus and zucchini'},{id:'p0d2',name:'Turkey Patties',description:'With cauliflower mash and steamed broccoli'}],snacks:[{id:'p0s1',name:'Celery with Almond Butter',description:''},{id:'p0s2',name:'Cucumber Slices',description:'With olive oil and herbs'}]},1:{// Phase 1 - MEVY Diet\nbreakfast:[{id:'p1b1',name:'MEVY Breakfast Bowl',description:'Eggs, spinach and avocado cooked in coconut oil'},{id:'p1b2',name:'Turkey Breakfast Patties',description:'With sautéed kale and onions'}],lunch:[{id:'p1l1',name:'Chicken and Vegetable Soup',description:'With celery, garlic, onion and leafy greens'},{id:'p1l2',name:'Beef and Broccoli Stir-Fry',description:'Cooked in coconut oil with garlic and ginger'}],dinner:[{id:'p1d1',name:'Baked Fish',description:'With roasted Brussels sprouts and cauliflower'},{id:'p1d2',name:'Lamb Chops',description:'With steamed asparagus and sautéed spinach'}],snacks:[{id:'p1s1',name:'Hard-Boiled Eggs',description:'With salt and pepper'},{id:'p1s2',name:'Coconut Yogurt',description:'Plain, unsweetened'}]},2:{// Phase 2 - Low Allergy\nbreakfast:[{id:'p2b1',name:'Quinoa Breakfast Bowl',description:'With berries and coconut flakes'},{id:'p2b2',name:'Turkey and Vegetables',description:'With sautéed zucchini and herbs'}],lunch:[{id:'p2l1',name:'Vegetable and Chicken Wrap',description:'Using lettuce as a wrap with avocado'},{id:'p2l2',name:'Quinoa Salad',description:'With cucumber, herbs and olive oil dressing'}],dinner:[{id:'p2d1',name:'Grilled Steak',description:'With roasted vegetables and small portion of buckwheat'},{id:'p2d2',name:'Baked Cod',description:'With millet and steamed broccoli'}],snacks:[{id:'p2s1',name:'Small Green Apple',description:''},{id:'p2s2',name:'Raw Almonds',description:'Small handful'}]},3:{// Phase 3 - Reintroduction\nbreakfast:[{id:'p3b1',name:'Gluten-Free Oatmeal',description:'With berries and cinnamon'},{id:'p3b2',name:'Eggs and Rice',description:'With sautéed vegetables'}],lunch:[{id:'p3l1',name:'Lentil Soup',description:'With vegetables and herbs'},{id:'p3l2',name:'Rice Bowl',description:'With protein of choice and mixed vegetables'}],dinner:[{id:'p3d1',name:'Reintroduction Test Meal',description:'Current test food plus regular phase 2 foods'},{id:'p3d2',name:'Chickpea Curry',description:'With cauliflower rice or regular rice'}],snacks:[{id:'p3s1',name:'Yogurt',description:'If dairy has been reintroduced successfully'},{id:'p3s2',name:'Fruit',description:'According to your reintroduction schedule'}]}};// Handle adding a meal\nconst handleAddMeal=(day,mealTime)=>{// In a real app, this would open a modal or form for selection\n// For simplicity, we'll just add the first meal option for the current phase and meal time\nconst mealOptions=mealOptionsByPhase[currentPhase][mealTime];if(mealOptions&&mealOptions.length>0){setMealPlan({...mealPlan,[day]:{...mealPlan[day],[mealTime]:mealOptions[0]}});}};// Handle removing a meal\nconst handleRemoveMeal=(day,mealTime)=>{setMealPlan({...mealPlan,[day]:{...mealPlan[day],[mealTime]:null}});};// Navigate to previous week\nconst goToPreviousWeek=()=>{const prevWeek=new Date(currentWeek);prevWeek.setDate(prevWeek.getDate()-7);setCurrentWeek(prevWeek);};// Navigate to next week\nconst goToNextWeek=()=>{const nextWeek=new Date(currentWeek);nextWeek.setDate(nextWeek.getDate()+7);setCurrentWeek(nextWeek);};// Format date for display\nconst formatDate=date=>{return date.toLocaleDateString('en-US',{month:'short',day:'numeric'});};return/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-7xl mx-auto py-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-10\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold mb-4\",children:\"Meal Planner\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xl text-gray-600 mb-4\",children:\"Plan your meals for the week based on your current phase in the Candida Diet.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-md p-6 mb-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col md:flex-row md:items-center md:justify-between mb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"phase-select\",className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Select your current phase:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"phase-select\",value:currentPhase,onChange:e=>setCurrentPhase(parseInt(e.target.value)),className:\"mt-1 block w-full md:w-auto pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-green-500 focus:border-green-500 sm:text-sm rounded-md\",children:[/*#__PURE__*/_jsx(\"option\",{value:0,children:\"Phase 0: 14-Day Cleanup\"}),/*#__PURE__*/_jsx(\"option\",{value:1,children:\"Phase 1: MEVY Diet\"}),/*#__PURE__*/_jsx(\"option\",{value:2,children:\"Phase 2: Low Allergy Diet\"}),/*#__PURE__*/_jsx(\"option\",{value:3,children:\"Phase 3: Food Reintroduction\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 md:mt-0 flex items-center\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:goToPreviousWeek,className:\"p-2 rounded-md text-gray-600 hover:bg-gray-100\",\"aria-label\":\"Previous week\",children:/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"h-5 w-5\",viewBox:\"0 0 20 20\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{fillRule:\"evenodd\",d:\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\",clipRule:\"evenodd\"})})}),/*#__PURE__*/_jsxs(\"span\",{className:\"mx-4 font-medium\",children:[\"Week of \",formatDate(weekDates[0]),\" - \",formatDate(weekDates[6])]}),/*#__PURE__*/_jsx(\"button\",{onClick:goToNextWeek,className:\"p-2 rounded-md text-gray-600 hover:bg-gray-100\",\"aria-label\":\"Next week\",children:/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"h-5 w-5\",viewBox:\"0 0 20 20\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{fillRule:\"evenodd\",d:\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\",clipRule:\"evenodd\"})})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-7 gap-4\",children:weekDates.map((date,index)=>/*#__PURE__*/_jsx(MealPlannerDay,{day:daysOfWeek[date.getDay()],date:formatDate(date),meals:mealPlan[daysOfWeek[date.getDay()]],onAddMeal:handleAddMeal,onRemoveMeal:handleRemoveMeal},index))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-green-50 border border-green-200 rounded-lg p-6 mb-8\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"text-xl font-bold mb-4\",children:[\"Phase \",currentPhase,\" Meal Suggestions\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4\",children:Object.entries(mealOptionsByPhase[currentPhase]).map(_ref=>{let[mealTime,options]=_ref;return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-4 rounded-md shadow-sm\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-semibold text-lg mb-3 capitalize\",children:mealTime}),/*#__PURE__*/_jsx(\"ul\",{className:\"space-y-3\",children:options.map(meal=>/*#__PURE__*/_jsxs(\"li\",{className:\"p-3 border border-gray-100 rounded\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"font-medium\",children:meal.name}),meal.description&&/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600\",children:meal.description})]},meal.id))})]},mealTime);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-md p-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold mb-4\",children:\"Tips for Successful Meal Planning\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"list-disc pl-6 space-y-2\",children:[/*#__PURE__*/_jsx(\"li\",{children:\"Prepare meals in batches to save time during the week\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Keep a stock of phase-appropriate snacks for when hunger strikes\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Rotate your proteins and vegetables to ensure nutrient variety\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Drink plenty of water throughout the day\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Adjust portions based on your individual needs and activity level\"})]})]})]});};export default MealPlanner;","map":{"version":3,"names":["React","useState","MealPlannerDay","jsx","_jsx","jsxs","_jsxs","MealPlanner","currentPhase","setCurrentPhase","currentWeek","setCurrentWeek","Date","getWeekDates","dates","firstDay","setDate","getDate","getDay","i","date","push","weekDates","daysOfWeek","mealPlan","setMealPlan","reduce","acc","day","breakfast","lunch","dinner","snacks","mealOptionsByPhase","id","name","description","handleAddMeal","mealTime","mealOptions","length","handleRemoveMeal","goToPreviousWeek","prevWeek","goToNextWeek","nextWeek","formatDate","toLocaleDateString","month","className","children","htmlFor","value","onChange","e","parseInt","target","onClick","xmlns","viewBox","fill","fillRule","d","clipRule","map","index","meals","onAddMeal","onRemoveMeal","Object","entries","_ref","options","meal"],"sources":["/Users/carsonloukusa/Documents/augment-projects/Diet_Plan/candida-diet-app/src/pages/MealPlanner.js"],"sourcesContent":["import React, { useState } from 'react';\nimport MealPlannerDay from '../components/MealPlannerDay';\n\nconst MealPlanner = () => {\n  const [currentPhase, setCurrentPhase] = useState(1);\n  const [currentWeek, setCurrentWeek] = useState(new Date());\n  \n  // Generate week dates based on currentWeek\n  const getWeekDates = () => {\n    const dates = [];\n    const firstDay = new Date(currentWeek);\n    firstDay.setDate(firstDay.getDate() - firstDay.getDay()); // Start with Sunday\n    \n    for (let i = 0; i < 7; i++) {\n      const date = new Date(firstDay);\n      date.setDate(date.getDate() + i);\n      dates.push(date);\n    }\n    \n    return dates;\n  };\n  \n  const weekDates = getWeekDates();\n  \n  const daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  \n  // Initial meal plan data\n  const [mealPlan, setMealPlan] = useState(\n    daysOfWeek.reduce((acc, day) => {\n      acc[day] = {\n        breakfast: null,\n        lunch: null,\n        dinner: null,\n        snacks: null\n      };\n      return acc;\n    }, {})\n  );\n\n  // Sample meal options by phase\n  const mealOptionsByPhase = {\n    0: { // Phase 0 - Big Cleanup\n      breakfast: [\n        { id: 'p0b1', name: 'Vegetable Omelette', description: '3 eggs with spinach, onions and peppers' },\n        { id: 'p0b2', name: 'Green Smoothie', description: 'Spinach, cucumber, celery, avocado and lemon juice' }\n      ],\n      lunch: [\n        { id: 'p0l1', name: 'Grilled Chicken Salad', description: 'With mixed greens, cucumber and olive oil dressing' },\n        { id: 'p0l2', name: 'Vegetable Soup', description: 'Homemade with leafy greens, celery, onions and garlic' }\n      ],\n      dinner: [\n        { id: 'p0d1', name: 'Baked Salmon', description: 'With asparagus and zucchini' },\n        { id: 'p0d2', name: 'Turkey Patties', description: 'With cauliflower mash and steamed broccoli' }\n      ],\n      snacks: [\n        { id: 'p0s1', name: 'Celery with Almond Butter', description: '' },\n        { id: 'p0s2', name: 'Cucumber Slices', description: 'With olive oil and herbs' }\n      ]\n    },\n    1: { // Phase 1 - MEVY Diet\n      breakfast: [\n        { id: 'p1b1', name: 'MEVY Breakfast Bowl', description: 'Eggs, spinach and avocado cooked in coconut oil' },\n        { id: 'p1b2', name: 'Turkey Breakfast Patties', description: 'With sautéed kale and onions' }\n      ],\n      lunch: [\n        { id: 'p1l1', name: 'Chicken and Vegetable Soup', description: 'With celery, garlic, onion and leafy greens' },\n        { id: 'p1l2', name: 'Beef and Broccoli Stir-Fry', description: 'Cooked in coconut oil with garlic and ginger' }\n      ],\n      dinner: [\n        { id: 'p1d1', name: 'Baked Fish', description: 'With roasted Brussels sprouts and cauliflower' },\n        { id: 'p1d2', name: 'Lamb Chops', description: 'With steamed asparagus and sautéed spinach' }\n      ],\n      snacks: [\n        { id: 'p1s1', name: 'Hard-Boiled Eggs', description: 'With salt and pepper' },\n        { id: 'p1s2', name: 'Coconut Yogurt', description: 'Plain, unsweetened' }\n      ]\n    },\n    2: { // Phase 2 - Low Allergy\n      breakfast: [\n        { id: 'p2b1', name: 'Quinoa Breakfast Bowl', description: 'With berries and coconut flakes' },\n        { id: 'p2b2', name: 'Turkey and Vegetables', description: 'With sautéed zucchini and herbs' }\n      ],\n      lunch: [\n        { id: 'p2l1', name: 'Vegetable and Chicken Wrap', description: 'Using lettuce as a wrap with avocado' },\n        { id: 'p2l2', name: 'Quinoa Salad', description: 'With cucumber, herbs and olive oil dressing' }\n      ],\n      dinner: [\n        { id: 'p2d1', name: 'Grilled Steak', description: 'With roasted vegetables and small portion of buckwheat' },\n        { id: 'p2d2', name: 'Baked Cod', description: 'With millet and steamed broccoli' }\n      ],\n      snacks: [\n        { id: 'p2s1', name: 'Small Green Apple', description: '' },\n        { id: 'p2s2', name: 'Raw Almonds', description: 'Small handful' }\n      ]\n    },\n    3: { // Phase 3 - Reintroduction\n      breakfast: [\n        { id: 'p3b1', name: 'Gluten-Free Oatmeal', description: 'With berries and cinnamon' },\n        { id: 'p3b2', name: 'Eggs and Rice', description: 'With sautéed vegetables' }\n      ],\n      lunch: [\n        { id: 'p3l1', name: 'Lentil Soup', description: 'With vegetables and herbs' },\n        { id: 'p3l2', name: 'Rice Bowl', description: 'With protein of choice and mixed vegetables' }\n      ],\n      dinner: [\n        { id: 'p3d1', name: 'Reintroduction Test Meal', description: 'Current test food plus regular phase 2 foods' },\n        { id: 'p3d2', name: 'Chickpea Curry', description: 'With cauliflower rice or regular rice' }\n      ],\n      snacks: [\n        { id: 'p3s1', name: 'Yogurt', description: 'If dairy has been reintroduced successfully' },\n        { id: 'p3s2', name: 'Fruit', description: 'According to your reintroduction schedule' }\n      ]\n    }\n  };\n\n  // Handle adding a meal\n  const handleAddMeal = (day, mealTime) => {\n    // In a real app, this would open a modal or form for selection\n    // For simplicity, we'll just add the first meal option for the current phase and meal time\n    const mealOptions = mealOptionsByPhase[currentPhase][mealTime];\n    if (mealOptions && mealOptions.length > 0) {\n      setMealPlan({\n        ...mealPlan,\n        [day]: {\n          ...mealPlan[day],\n          [mealTime]: mealOptions[0]\n        }\n      });\n    }\n  };\n\n  // Handle removing a meal\n  const handleRemoveMeal = (day, mealTime) => {\n    setMealPlan({\n      ...mealPlan,\n      [day]: {\n        ...mealPlan[day],\n        [mealTime]: null\n      }\n    });\n  };\n\n  // Navigate to previous week\n  const goToPreviousWeek = () => {\n    const prevWeek = new Date(currentWeek);\n    prevWeek.setDate(prevWeek.getDate() - 7);\n    setCurrentWeek(prevWeek);\n  };\n\n  // Navigate to next week\n  const goToNextWeek = () => {\n    const nextWeek = new Date(currentWeek);\n    nextWeek.setDate(nextWeek.getDate() + 7);\n    setCurrentWeek(nextWeek);\n  };\n\n  // Format date for display\n  const formatDate = (date) => {\n    return date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n  };\n\n  return (\n    <div className=\"max-w-7xl mx-auto py-8\">\n      <div className=\"mb-10\">\n        <h1 className=\"text-3xl font-bold mb-4\">Meal Planner</h1>\n        <p className=\"text-xl text-gray-600 mb-4\">\n          Plan your meals for the week based on your current phase in the Candida Diet.\n        </p>\n      </div>\n\n      <div className=\"bg-white rounded-lg shadow-md p-6 mb-8\">\n        <div className=\"flex flex-col md:flex-row md:items-center md:justify-between mb-6\">\n          <div>\n            <label htmlFor=\"phase-select\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Select your current phase:\n            </label>\n            <select\n              id=\"phase-select\"\n              value={currentPhase}\n              onChange={(e) => setCurrentPhase(parseInt(e.target.value))}\n              className=\"mt-1 block w-full md:w-auto pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-green-500 focus:border-green-500 sm:text-sm rounded-md\"\n            >\n              <option value={0}>Phase 0: 14-Day Cleanup</option>\n              <option value={1}>Phase 1: MEVY Diet</option>\n              <option value={2}>Phase 2: Low Allergy Diet</option>\n              <option value={3}>Phase 3: Food Reintroduction</option>\n            </select>\n          </div>\n\n          <div className=\"mt-4 md:mt-0 flex items-center\">\n            <button\n              onClick={goToPreviousWeek}\n              className=\"p-2 rounded-md text-gray-600 hover:bg-gray-100\"\n              aria-label=\"Previous week\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n              </svg>\n            </button>\n            <span className=\"mx-4 font-medium\">\n              Week of {formatDate(weekDates[0])} - {formatDate(weekDates[6])}\n            </span>\n            <button\n              onClick={goToNextWeek}\n              className=\"p-2 rounded-md text-gray-600 hover:bg-gray-100\"\n              aria-label=\"Next week\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\" clipRule=\"evenodd\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-7 gap-4\">\n          {weekDates.map((date, index) => (\n            <MealPlannerDay\n              key={index}\n              day={daysOfWeek[date.getDay()]}\n              date={formatDate(date)}\n              meals={mealPlan[daysOfWeek[date.getDay()]]}\n              onAddMeal={handleAddMeal}\n              onRemoveMeal={handleRemoveMeal}\n            />\n          ))}\n        </div>\n      </div>\n\n      <div className=\"bg-green-50 border border-green-200 rounded-lg p-6 mb-8\">\n        <h2 className=\"text-xl font-bold mb-4\">Phase {currentPhase} Meal Suggestions</h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          {Object.entries(mealOptionsByPhase[currentPhase]).map(([mealTime, options]) => (\n            <div key={mealTime} className=\"bg-white p-4 rounded-md shadow-sm\">\n              <h3 className=\"font-semibold text-lg mb-3 capitalize\">{mealTime}</h3>\n              <ul className=\"space-y-3\">\n                {options.map((meal) => (\n                  <li key={meal.id} className=\"p-3 border border-gray-100 rounded\">\n                    <p className=\"font-medium\">{meal.name}</p>\n                    {meal.description && <p className=\"text-sm text-gray-600\">{meal.description}</p>}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"bg-white rounded-lg shadow-md p-6\">\n        <h2 className=\"text-xl font-bold mb-4\">Tips for Successful Meal Planning</h2>\n        <ul className=\"list-disc pl-6 space-y-2\">\n          <li>Prepare meals in batches to save time during the week</li>\n          <li>Keep a stock of phase-appropriate snacks for when hunger strikes</li>\n          <li>Rotate your proteins and vegetables to ensure nutrient variety</li>\n          <li>Drink plenty of water throughout the day</li>\n          <li>Adjust portions based on your individual needs and activity level</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default MealPlanner; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}